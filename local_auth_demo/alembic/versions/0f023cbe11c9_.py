"""empty message

Revision ID: 0f023cbe11c9
Revises: cb01e050df85
Create Date: 2024-05-14 14:01:58.441740

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = '0f023cbe11c9'
down_revision: Union[str, None] = 'cb01e050df85'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('reflexauthgroup',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('reflexauthgroup', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_reflexauthgroup_name'), ['name'], unique=True)

    op.create_table('reflexauthuser',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('foreign_user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('provider', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('reflexauthuser', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_reflexauthuser_foreign_user_id'), ['foreign_user_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_reflexauthuser_provider'), ['provider'], unique=False)

    op.create_table('reflexauthgroupmembership',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['reflexauthgroup.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['reflexauthuser.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('reflexauthgroupmembership', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_reflexauthgroupmembership_group_id'), ['group_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_reflexauthgroupmembership_user_id'), ['user_id'], unique=False)

    op.create_table('reflexauthpermission',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('allow', sa.Boolean(), nullable=True),
    sa.Column('deny', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['reflexauthgroup.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['reflexauthuser.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('reflexauthpermission', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_reflexauthpermission_group_id'), ['group_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_reflexauthpermission_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_reflexauthpermission_user_id'), ['user_id'], unique=False)

    op.create_table('reflexauthsession',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('session_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('client_ip', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('expiration', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['reflexauthuser.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('reflexauthsession', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_reflexauthsession_active'), ['active'], unique=False)
        batch_op.create_index(batch_op.f('ix_reflexauthsession_session_id'), ['session_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_reflexauthsession_user_id'), ['user_id'], unique=False)

    with op.batch_alter_table('localauthsession', schema=None) as batch_op:
        batch_op.drop_index('ix_localauthsession_session_id')
        batch_op.drop_index('ix_localauthsession_user_id')

    op.drop_table('localauthsession')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('localauthsession',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('session_id', sa.VARCHAR(), nullable=False),
    sa.Column('expiration', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('localauthsession', schema=None) as batch_op:
        batch_op.create_index('ix_localauthsession_user_id', ['user_id'], unique=False)
        batch_op.create_index('ix_localauthsession_session_id', ['session_id'], unique=1)

    with op.batch_alter_table('reflexauthsession', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_reflexauthsession_user_id'))
        batch_op.drop_index(batch_op.f('ix_reflexauthsession_session_id'))
        batch_op.drop_index(batch_op.f('ix_reflexauthsession_active'))

    op.drop_table('reflexauthsession')
    with op.batch_alter_table('reflexauthpermission', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_reflexauthpermission_user_id'))
        batch_op.drop_index(batch_op.f('ix_reflexauthpermission_name'))
        batch_op.drop_index(batch_op.f('ix_reflexauthpermission_group_id'))

    op.drop_table('reflexauthpermission')
    with op.batch_alter_table('reflexauthgroupmembership', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_reflexauthgroupmembership_user_id'))
        batch_op.drop_index(batch_op.f('ix_reflexauthgroupmembership_group_id'))

    op.drop_table('reflexauthgroupmembership')
    with op.batch_alter_table('reflexauthuser', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_reflexauthuser_provider'))
        batch_op.drop_index(batch_op.f('ix_reflexauthuser_foreign_user_id'))

    op.drop_table('reflexauthuser')
    with op.batch_alter_table('reflexauthgroup', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_reflexauthgroup_name'))

    op.drop_table('reflexauthgroup')
    # ### end Alembic commands ###
